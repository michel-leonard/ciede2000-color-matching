name: Haxe CIEDE2000 Testing

# During summer 2025, this workflow was tested on several weekends and completed successfully in 141 seconds.

on:
  schedule:
    - cron: '42 2 13,27 * *'
  workflow_dispatch:

env:
  description: "Automated Testing — Michel Leonard implements the CIE2000 color difference formula in Haxe"
  input_file: "test-cases.csv contains lines like 61,17.2,9,60.8,31,-28 representing two L*a*b* colors"
  process:  "Print the line with its Delta E like 61,17.2,9,60.8,31,-28,21.672167593136520154681360201279 for each line"
  related_url: "https://github.com/michel-leonard/ciede2000-color-matching/tree/main/tests/hx"
  n_csv_lines: 10000000

jobs:
  test-implementation-de00-haxe:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: 📂 For each step below, a new shell will be started at the repository root
        uses: actions/checkout@v5

      - name: 👉 Disable the user manual database, which is not needed in this CI/CD workflow
        run: sudo ln --backup --symbolic --verbose $(which true) $(which mandb)

      - name: 👉 Set up a less crowded server for the APT package manager (step disabled, but useful when an installation is slow)
        run: true || grep -Flr '.ubuntu.com' /etc/apt | xargs sudo sed -i 's|[^/]\+ubuntu.com|mirrors.maine.edu|g'

      - name: 📦 Set up Haxe and GCC
        run: |
          command -v haxe > /dev/null || {
            # 1. Select the version of Haxe you wish to install (Haxe 4 and Haxe 5 both work),
            # the list of available versions is located at https://github.com/HaxeFoundation/haxe/releases
            HAXE_DESIRED_VERSION="5.0.0-preview.1"
            HAXE_DESIRED_VERSION="4.3.7"
            # 2. Download the archive and place it in a suitable directory
            sudo rm -rf "/opt/haxe-$HAXE_DESIRED_VERSION" && mkdir "/opt/haxe-$HAXE_DESIRED_VERSION"
            HAXE_ARCHIVE_URL="https://github.com/HaxeFoundation/haxe/releases/download"
            HAXE_ARCHIVE_URL="$HAXE_ARCHIVE_URL/$HAXE_DESIRED_VERSION/haxe-$HAXE_DESIRED_VERSION-linux64.tar.gz"
            wget --no-verbose --no-check-certificate --timeout=5 --tries=2 "$HAXE_ARCHIVE_URL" -O- |
            tar -xz --strip-components=1 -C "/opt/haxe-$HAXE_DESIRED_VERSION"
            # 3. Create a symbolic link that integrates Haxe into the PATH
            sudo ln --backup --symbolic --verbose "/opt/haxe-$HAXE_DESIRED_VERSION/haxe" /usr/local/bin/haxe
          }
          command -v gcc > /dev/null || { sudo apt-get update --allow-unauthenticated && sudo apt-get install --allow-unauthenticated --no-install-recommends --assume-yes gcc ; }

      - name: 🔧 Prepare the .hx file
        run: cp -p tests/hx/ciede-2000-driver.hx tests/hx/Main.hx

      - name: ⚙️ Compile the CIEDE2000 driver program in C99
        run: gcc --version && gcc -std=c99 -Wall -pedantic -O2 -g tests/c/ciede-2000-driver.c -o ciede-2000-driver -lm

      - name: 📑 Display help for the authoritative test software
        run: ./ciede-2000-driver --help

      - name: 🎨 Generate ΔE2000 color difference test cases
        run: ./ciede-2000-driver --rand-seed $(date +'%Y%V') --generate $n_csv_lines --output-file test-cases.csv

      - name: 🚀 Run test cases in Haxe and stream to verifier
        run: haxe --version && haxe -cp tests/hx --run Main test-cases.csv | ./ciede-2000-driver -o summary.txt

      - name: 🔍 Display verification output
        run: cat summary.txt

      - name: 🏁 Conclusion
        run: |
          if grep -q "Errors : 0" summary.txt && grep -q "Successes : $n_csv_lines" summary.txt; then
            echo "✔️ Verification successful: all $n_csv_lines color differences were correctly calculated."
          else
            echo "❌ Verification failed. See above for details."
            exit 1
          fi
