name: Julia CIEDE2000 Testing

# During summer 2025, this workflow was tested on several weekends and completed successfully in 107 seconds.

on:
  schedule:
    - cron: '9 5 3,17 * *'
  workflow_dispatch:

env:
  description: "Automated Testing — Michel Leonard implements the CIE2000 color difference formula in Julia"
  input_file: "test-cases.csv contains lines like 54,-5,111,49.3,3,122.3 representing two L*a*b* colors"
  process:  "Print the line with its Delta E like 54,-5,111,49.3,3,122.3,6.324662500277199326648048895739 for each line"
  related_url: "https://github.com/michel-leonard/ciede2000-color-matching/tree/main/tests/jl"
  n_csv_lines: 10000000

jobs:
  test-implementation-de00-jl:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: 📂 For each step below, a new shell will be started at the repository root
        uses: actions/checkout@v5

      - name: 👉 Disable the user manual database, which is not needed in this CI/CD workflow
        run: sudo ln --backup --symbolic --verbose $(which true) $(which mandb)

      - name: 👉 Set up a less crowded server for the APT package manager (step disabled, but useful when an installation is slow)
        run: true || grep -Flr '.ubuntu.com' /etc/apt | xargs sudo sed -i 's|[^/]\+ubuntu.com|mirrors.maine.edu|g'

      - name: 📦 Set up Julia and GCC
        run: |
          if ! command -v julia > /dev/null; then
            ########################################################################################
            ####  STEP 1:            Download & Extract the latest version of Julia             ####
            ########################################################################################
            URL=$(wget --no-verbose --no-check-certificate --timeout=5 --tries=2 "https://julialang.org/downloads/" -O- |
              grep 'linux/x64' | grep '\.tar\.gz' | grep -o 'https://[^"]*' | head -n 1)
            if [ -z "$URL" ]; then
              URL="https://julialang-s3.julialang.org/bin/linux/x64/1.11/julia-1.11.5-linux-x86_64.tar.gz"
            fi
            echo "Download Julia from $URL" && sudo rm -rf /opt/julia && mkdir /opt/julia
            wget --no-verbose --no-check-certificate --timeout=5 --tries=2 "$URL" -O- | tar -xz --strip-components=1 -C /opt/julia
            ########################################################################################
            ####  STEP 2:                       Add Julia to System PATH                        ####
            ########################################################################################
            sudo ln --backup --symbolic --verbose /opt/julia/bin/julia /usr/local/bin/julia
            ########################################################################################
            ####  CONCLUSION:                    Julia Installed in Under 15s                   ####
            ########################################################################################
          fi
          julia --version
          command -v gcc > /dev/null || { sudo apt-get update --allow-unauthenticated && sudo apt-get install --allow-unauthenticated --no-install-recommends --assume-yes gcc ; }

      - name: ⚙️ Compile the CIEDE2000 driver program in C99
        run: gcc --version && gcc -std=c99 -Wall -pedantic -O2 -g tests/c/ciede-2000-driver.c -o ciede-2000-driver -lm

      - name: 📑 Display help for the authoritative test software
        run: ./ciede-2000-driver --help

      - name: 🎨 Generate ΔE2000 color difference test cases
        run: ./ciede-2000-driver --rand-seed $(date +'%Y%V') --generate $n_csv_lines --output-file test-cases.csv

      - name: 🚀 Run test cases in Julia and stream to verifier
        run: julia tests/jl/ciede-2000-driver.jl test-cases.csv | ./ciede-2000-driver -o summary.txt

      - name: 🔍 Display verification output
        run: cat summary.txt

      - name: 🏁 Conclusion
        run: |
          if grep -q "Errors : 0" summary.txt && grep -q "Successes : $n_csv_lines" summary.txt; then
            echo "✔️ Verification successful: all $n_csv_lines color differences were correctly calculated."
          else
            echo "❌ Verification failed. See above for details."
            exit 1
          fi
