name: Elixir CIEDE2000 Testing

# During summer 2025, this workflow was tested on several weekends and completed successfully in 182 seconds.

on:
  schedule:
    - cron: '27 2 5,19 * *'
  workflow_dispatch:

env:
  description: "Automated Testing — Michel Leonard implements the CIE2000 color difference formula in Elixir"
  input_file: "test-cases.csv contains lines like 20,-25,56,16.5,5.1,41 representing two L*a*b* colors"
  process:  "Print the line with its Delta E like 20,-25,56,16.5,5.1,41,18.750593278323391406152489922779 for each line"
  related_url: "https://github.com/michel-leonard/ciede2000-color-matching/tree/main/tests/exs"
  n_csv_lines: 10000000

jobs:
  test-implementation-de00-exs:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: 📂 For each step below, a new shell will be started at the repository root
        uses: actions/checkout@v5

      - name: 👉 Disable the user manual database, which is not needed in this CI/CD workflow
        run: sudo ln --backup --symbolic --verbose $(which true) $(which mandb)

      - name: 👉 Set up a less crowded server for the APT package manager (step disabled, but useful when an installation is slow)
        run: true || grep -Flr '.ubuntu.com' /etc/apt | xargs sudo sed -i 's|[^/]\+ubuntu.com|mirrors.maine.edu|g'

      - name: 📦 Set up Elixir and GCC
        run: |
          command -v elixir > /dev/null || {
            # 1. Download and install the latest versions of Elixir and OTP (started with Elixir 1.18.4 and OTP 27.3.4)
            wget --no-verbose --no-check-certificate --timeout=5 --tries=3 https://elixir-lang.org/install.sh -O- | sh -s -- elixir@latest otp@latest
            # 2. Add installed directories to the PATH
            for DIRECTORY in $HOME/.elixir-install/installs/*/*/bin; do
              echo "$DIRECTORY" >> $GITHUB_PATH    # For future workflow steps
              export PATH="$PATH:$DIRECTORY"       # For the current workflow step
            done
          }
          command -v gcc > /dev/null || { sudo apt-get update --allow-unauthenticated && sudo apt-get install --allow-unauthenticated --no-install-recommends --assume-yes gcc ; }

      - name: ⚙️ Compile the CIEDE2000 driver program in C99
        run: gcc --version && gcc -std=c99 -Wall -pedantic -O2 -g tests/c/ciede-2000-driver.c -o ciede-2000-driver -lm

      - name: 📑 Display help for the authoritative test software
        run: ./ciede-2000-driver --help

      - name: 🎨 Generate ΔE2000 color difference test cases
        run: ./ciede-2000-driver --rand-seed $(date +'%Y%V') --generate $n_csv_lines --output-file test-cases.csv

      - name: 🚀 Run test cases in Elixir and stream to verifier
        run: elixir --version && elixir tests/exs/ciede-2000-driver.exs test-cases.csv | ./ciede-2000-driver -o summary.txt

      - name: 🔍 Display verification output
        run: cat summary.txt

      - name: 🏁 Conclusion
        run: |
          if grep -q "Errors : 0" summary.txt && grep -q "Successes : $n_csv_lines" summary.txt; then
            echo "✔️ Verification successful: all $n_csv_lines color differences were correctly calculated."
          else
            echo "❌ Verification failed. See above for details."
            exit 1
          fi
