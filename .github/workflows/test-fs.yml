name: F# CIEDE2000 Testing

# During summer 2025, this workflow was tested on several weekends and completed successfully in 83 seconds.

on:
  schedule:
    - cron: '39 4 9,23 * *'
  workflow_dispatch:

env:
  description: "Automated Testing — Michel Leonard implements the CIE2000 color difference formula in F#"
  input_file: "test-cases.csv contains lines like 75.2,27,-14.9,77,110,11 representing two L*a*b* colors"
  process:  "Print the line with its Delta E like 75.2,27,-14.9,77,110,11,23.534324156422001355353092673234 for each line"
  related_url: "https://github.com/michel-leonard/ciede2000-color-matching/tree/main/tests/fs"
  n_csv_lines: 10000000

jobs:
  test-implementation-de00-fsharp:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: 📂 For each step below, a new shell will be started at the repository root
        uses: actions/checkout@v5

      - name: 👉 Disable the user manual database, which is not needed in this CI/CD workflow
        run: sudo ln --backup --symbolic --verbose $(which true) $(which mandb)

      - name: 👉 Set up a less crowded server for the APT package manager (step disabled, but useful when an installation is slow)
        run: true || grep -Flr '.ubuntu.com' /etc/apt | xargs sudo sed -i 's|[^/]\+ubuntu.com|mirrors.maine.edu|g'

      - name: 📦 Set up dotnet and GCC
        run: |
          command -v dotnet > /dev/null || { sudo apt-get update --allow-unauthenticated && sudo apt-get install --allow-unauthenticated --no-install-recommends --assume-yes dotnet-sdk-8.0 ; }
          command -v gcc > /dev/null || { sudo apt-get update --allow-unauthenticated && sudo apt-get install --allow-unauthenticated --no-install-recommends --assume-yes gcc ; }

      - name: 🔧 Create F# project and setup Program.fs
        run: |
          mkdir -p ciede-2000-tests/Exec
          dotnet --version && dotnet new console -lang "F#" -n Exec -o ciede-2000-tests/Exec
          cp -p tests/fs/ciede-2000-driver.fs ciede-2000-tests/Exec/Program.fs
          printf '%s\n' '<Project Sdk="Microsoft.NET.Sdk">' \
          '  <PropertyGroup>' \
          '    <OutputType>Exe</OutputType>' \
          '    <TargetFramework>net8.0</TargetFramework>' \
          '    <LangVersion>latest</LangVersion>' \
          '  </PropertyGroup>' \
          '  <ItemGroup>' \
          '    <Compile Include="Program.fs" />' \
          '  </ItemGroup>' \
          '</Project>' > ciede-2000-tests/Exec/Exec.fsproj

      - name: ⚙️ Build project
        run: dotnet build --configuration Release ciede-2000-tests/Exec

      - name: ⚙️ Compile the CIEDE2000 driver program in C99
        run: gcc --version && gcc -std=c99 -Wall -pedantic -O2 -g tests/c/ciede-2000-driver.c -o ciede-2000-driver -lm

      - name: 📑 Display help for the authoritative test software
        run: ./ciede-2000-driver --help

      - name: 🎨 Generate ΔE2000 color difference test cases
        run: ./ciede-2000-driver --rand-seed $(date +'%Y%V') --generate $n_csv_lines --output-file test-cases.csv

      - name: 🚀 Run test cases in F# and stream to verifier
        run: dotnet run --configuration Release --project ciede-2000-tests/Exec -- test-cases.csv | ./ciede-2000-driver -o summary.txt

      - name: 🔍 Display verification output
        run: cat summary.txt

      - name: 🏁 Conclusion
        run: |
          if grep -q "Errors : 0" summary.txt && grep -q "Successes : $n_csv_lines" summary.txt; then
            echo "✔️ Verification successful: all $n_csv_lines color differences were correctly calculated."
          else
            echo "❌ Verification failed. See above for details."
            exit 1
          fi
