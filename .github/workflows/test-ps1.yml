name: PowerShell CIEDE2000 Testing

# During summer 2025, this workflow was tested on several weekends and completed successfully in 149 seconds.

on:
  schedule:
    - cron: '36 2 2,16 * *'
  workflow_dispatch:

env:
  description: "Automated Testing — Michel Leonard implements the CIE2000 color difference formula in PowerShell"
  input_file: "test-cases.csv contains lines like 60,99.5,-17,88.3,90,12 representing two L*a*b* colors"
  process:  "Print the line with its Delta E like 60,99.5,-17,88.3,90,12,23.154295490084383918509454157723 for each line"
  related_url: "https://github.com/michel-leonard/ciede2000-color-matching/tree/main/tests/ps1"
  n_csv_lines: 1000000

jobs:
  test-implementation-de00-ps1:
    runs-on: windows-latest
    timeout-minutes: 5

    steps:
      - name: 📂 For each step below, a new shell will be started at the repository root
        uses: actions/checkout@v5

      - name: 📦 Display System Information
        run: |
          Get-ComputerInfo | Select-Object WindowsProductName, WindowsVersion, OsBuildNumber
          get-host
          $PSVersionTable

      - name: ⚙️ Compile the CIEDE2000 driver program in C99
        run: gcc --version && gcc -std=c99 -Wall -pedantic -O2 -g tests/c/ciede-2000-driver.c -o ciede-2000-driver.exe -lm

      - name: 📑 Display help for the authoritative test software
        run: ./ciede-2000-driver --help

      - name: 🎨 Generate ΔE2000 color difference test cases
        run: |
          $seed = get-date -UFormat %Y%V
          ./ciede-2000-driver.exe --rand-seed "$seed" --generate "${env:n_csv_lines}" > test-cases.csv

      - name: 🚀 Run test cases in PowerShell and stream to verifier
        run: . ./tests/ps1/ciede-2000-driver.ps1 test-cases.csv | ./ciede-2000-driver.exe > summary.txt

      - name: 🔍 Display verification output
        run: Get-Content summary.txt

      - name: 🏁 Conclusion
        run: |
          $file = Get-Content summary.txt -Raw
          if (($file -match "Errors : 0") -and ($file -match "Successes : ${env:n_csv_lines}")) {
              "✔️ Verification successful: all ${env:n_csv_lines} color differences were correctly calculated."
          } else {
              "❌ Verification failed. See above for details."
              exit 1
          }
